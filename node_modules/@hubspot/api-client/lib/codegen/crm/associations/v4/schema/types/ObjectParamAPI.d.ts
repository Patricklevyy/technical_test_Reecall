import { Configuration } from '../configuration';
import { CollectionResponseAssociationSpecWithLabelNoPaging } from '../models/CollectionResponseAssociationSpecWithLabelNoPaging';
import { PublicAssociationDefinitionCreateRequest } from '../models/PublicAssociationDefinitionCreateRequest';
import { PublicAssociationDefinitionUpdateRequest } from '../models/PublicAssociationDefinitionUpdateRequest';
import { DefinitionsApiRequestFactory, DefinitionsApiResponseProcessor } from "../apis/DefinitionsApi";
export interface DefinitionsApiDeleteRequest {
    fromObjectType: string;
    toObjectType: string;
    associationTypeId: number;
}
export interface DefinitionsApiCreateRequest {
    fromObjectType: string;
    toObjectType: string;
    publicAssociationDefinitionCreateRequest: PublicAssociationDefinitionCreateRequest;
}
export interface DefinitionsApiGetAllRequest {
    fromObjectType: string;
    toObjectType: string;
}
export interface DefinitionsApiUpdateRequest {
    fromObjectType: string;
    toObjectType: string;
    publicAssociationDefinitionUpdateRequest: PublicAssociationDefinitionUpdateRequest;
}
export declare class ObjectDefinitionsApi {
    private api;
    constructor(configuration: Configuration, requestFactory?: DefinitionsApiRequestFactory, responseProcessor?: DefinitionsApiResponseProcessor);
    _delete(param: DefinitionsApiDeleteRequest, options?: Configuration): Promise<void>;
    create(param: DefinitionsApiCreateRequest, options?: Configuration): Promise<CollectionResponseAssociationSpecWithLabelNoPaging>;
    getAll(param: DefinitionsApiGetAllRequest, options?: Configuration): Promise<CollectionResponseAssociationSpecWithLabelNoPaging>;
    update(param: DefinitionsApiUpdateRequest, options?: Configuration): Promise<void>;
}
