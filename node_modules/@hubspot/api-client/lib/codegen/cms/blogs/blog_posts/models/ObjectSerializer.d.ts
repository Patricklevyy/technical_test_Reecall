export * from '../models/Angle';
export * from '../models/AttachToLangPrimaryRequestVNext';
export * from '../models/BackgroundImage';
export * from '../models/BatchInputBlogPost';
export * from '../models/BatchInputJsonNode';
export * from '../models/BatchInputString';
export * from '../models/BatchResponseBlogPost';
export * from '../models/BatchResponseBlogPostWithErrors';
export * from '../models/BlogPost';
export * from '../models/BlogPostLanguageCloneRequestVNext';
export * from '../models/CollectionResponseWithTotalBlogPostForwardPaging';
export * from '../models/CollectionResponseWithTotalVersionBlogPost';
export * from '../models/ColorStop';
export * from '../models/ContentCloneRequestVNext';
export * from '../models/ContentLanguageVariation';
export * from '../models/ContentScheduleRequestVNext';
export * from '../models/DetachFromLangGroupRequestVNext';
export * from '../models/ErrorDetail';
export * from '../models/ForwardPaging';
export * from '../models/Gradient';
export * from '../models/LayoutSection';
export * from '../models/ModelError';
export * from '../models/NextPage';
export * from '../models/Paging';
export * from '../models/PreviousPage';
export * from '../models/RGBAColor';
export * from '../models/RowMetaData';
export * from '../models/SetNewLanguagePrimaryRequestVNext';
export * from '../models/SideOrCorner';
export * from '../models/StandardError';
export * from '../models/Styles';
export * from '../models/UpdateLanguagesRequestVNext';
export * from '../models/VersionBlogPost';
export * from '../models/VersionUser';
export declare class ObjectSerializer {
    static findCorrectType(data: any, expectedType: string): any;
    static serialize(data: any, type: string, format: string): any;
    static deserialize(data: any, type: string, format: string): any;
    static normalizeMediaType(mediaType: string | undefined): string | undefined;
    static getPreferredMediaType(mediaTypes: Array<string>): string;
    static stringify(data: any, mediaType: string): string;
    static parse(rawData: string, mediaType: string | undefined): any;
}
